security:
    encoders:
        Gt\Catalog\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: Gt\Catalog\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
#            anonymous: true
            lazy: true
            provider: app_user_provider
#            http_basic:
#                realm: Secured Area
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            json_login:
                check_path: /api/login_check
                #                username_path: email
                #                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            # TODO gali netikti, nes yra iš anksčiau rout'ai, kurie yra be permission'ų
        api:
            pattern: ^/api/
            stateless: true
            jwt: ~
#            provider: app_user_provider
#                guard:
#                    authenticators:
#                        - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # TODO gal sudėti senus api rout'us kaip public access?
#    gt.catalog.rest.prekes                         GET|POST          ANY      ANY    /api/ezp/v2/prekes/{language}
#    gt.catalog.rest.products                       GET|POST          ANY      ANY    /api/v3/products/{language}
#    gt.catalog.rest.categories                     GET|POST          ANY      ANY    /api/v3/categories/{language}
#    gt.catalog.rest.categories_roots               GET|POST          ANY      ANY    /api/v3/categories_roots
#    gt.catalog.rest.category_tree                  GET|POST          ANY      ANY    /api/v3/category_tree/{categoryCode}/{lang}
#    gt.catalog.rest.languages                      GET|POST          ANY      ANY    /api/v3/languages
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin/language/edit, roles: ROLE_ADMIN }
        - { path: ^/admin/language/new, roles: ROLE_ADMIN }
        - { path: ^/admin/classificator_group/edit, roles: ROLE_ADMIN }
        - { path: ^/admin/classificator_group/new, roles: ROLE_ADMIN }
        - { path: ^/admin/users, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: [ROLE_EDITOR, ROLE_ADMIN] }
        - { path: ^/buh, roles: [ROLE_BUH, ROLE_ADMIN] }

    enable_authenticator_manager: true